import tkinter as tk
from tkinter import messagebox
from PIL import Image, ImageTk
import random
import os  # Importamos la biblioteca os para trabajar con archivos del sistema

# Lista de casos con culpables, armas y locaciones asociadas
casos = [
    {"culpable": "Violeta Plum", "arma": "Candelabro", "locacion": "Biblioteca"},
    {"culpable": "Ruben Mostaza", "arma": "Cuchillo de Cocina", "locacion": "Cocina"},
    {"culpable": "Celeste Azul", "arma": "Revolver", "locacion": "Sala de estar"},
    {"culpable": "Bruno Verde", "arma": "Cuerda", "locacion": "Jardin"},
    {"culpable": "Rosa Madero", "arma": "Llave Inglesa", "locacion": "Cuarto"}
]

# Información sobre los personajes y sus herramientas
personajes = {
    "Violeta Plum": {"profesion": "Profesora de matematicas", "ubicacion": "Biblioteca", "herramienta": "Candelabro", "imagen": "violeta_plum.jpg"},
    "Ruben Mostaza": {"profesion": "Coronel retirado", "ubicacion": "Cocina", "herramienta": "Cuchillo de Cocina", "imagen": "ruben_mostaza.jpg"},
    "Celeste Azul": {"profesion": "Joven artista", "ubicacion": "Sala de estar", "herramienta": "Revolver", "imagen": "celeste_azul.jpg"},
    "Bruno Verde": {"profesion": "Reverendo de la parroquia", "ubicacion": "Jardin", "herramienta": "Cuerda", "imagen": "bruno_verde.jpg"},
    "Rosa Madero": {"profesion": "Doctora especializada en enfermedades infecciosas", "ubicacion": "Cuarto", "herramienta": "Llave Inglesa", "imagen": "rosa_madero.jpg"}
}

# Preguntas disponibles para hacer a cada personaje
preguntas_disponibles = [
    "Donde estaba {}?",
    "Que herramienta estaba usando {}?",
    "Donde estaba {} y que herramienta estaba usando?"
]

intentos_disponibles = 4
culpable_correcto = ""
ventana_juego = None

def hacer_pregunta(personaje, pregunta_idx):
    global intentos_disponibles
    
    if intentos_disponibles > 0:
        intentos_disponibles -= 1
        pregunta = preguntas_disponibles[pregunta_idx].format(personaje)
        respuesta = ""
        
        if pregunta_idx == 0:
            respuesta = personajes[personaje]["ubicacion"]
        elif pregunta_idx == 1:
            respuesta = personajes[personaje]["herramienta"]
        elif pregunta_idx == 2:
            respuesta = f"Estaba en la {personajes[personaje]['ubicacion']} usando: {personajes[personaje]['herramienta']}"
        
        messagebox.showinfo("Respuesta", f"{pregunta}\n\nRespuesta: {respuesta}")
        
        if intentos_disponibles == 0:
            messagebox.showinfo("Fin del juego", "Se acabaron los intentos. Intenta identificar al culpable.")
    else:
        messagebox.showinfo("Fin del juego", "Se acabaron los intentos. Intenta identificar al culpable.")

def verificar_eleccion(culpable_elegido):
    global intentos_disponibles, culpable_correcto
    
    if culpable_elegido == culpable_correcto:
        mensaje = f"Correcto! Has descubierto al culpable! El verdadero culpable fue encontrado en la {personajes[culpable_correcto]['ubicacion']} usando: {personajes[culpable_correcto]['herramienta']}"
        messagebox.showinfo("Resultado", mensaje)
    else:
        mensaje = f"Incorrecto. Sigue investigando. El verdadero culpable fue encontrado en la {personajes[culpable_correcto]['ubicacion']} usando: {personajes[culpable_correcto]['herramienta']}"
        messagebox.showerror("Resultado", mensaje)
    
    intentos_disponibles = 4
    ventana_juego.destroy()
    mostrar_opciones_fin()

def iniciar_juego():
    global culpable_correcto, ventana_juego
    
    caso_actual = random.choice(casos)
    culpable_correcto = caso_actual["culpable"]
    arma_correcta = caso_actual["arma"]
    locacion_correcta = caso_actual["locacion"]
    
    print("El personaje culpable es:", culpable_correcto)
    
    # Crear y configurar la ventana principal
    ventana_juego = tk.Tk()
    ventana_juego.title("Juego Clue")
    
    # Configurar la ventana en modo de pantalla completa
    ventana_juego.attributes("-fullscreen", True)
    
    # Establecer el fondo de la ventana
    fondo_imagen = Image.open("escena_crimen.jpg")  # Reemplaza "escena_crimen.jpg" con el nombre de tu imagen de fondo
    fondo_imagen = fondo_imagen.resize((ventana_juego.winfo_screenwidth(), ventana_juego.winfo_screenheight()), Image.ANTIALIAS)
    fondo_tk = ImageTk.PhotoImage(fondo_imagen)
    fondo_label = tk.Label(ventana_juego, image=fondo_tk)
    fondo_label.place(x=0, y=0, relwidth=1, relheight=1)
    
    # Reproducir el sonido de fondo
    os.system("start sonido_crimen.mp3")  # Reemplaza "sonido_crimen.mp3" con el nombre de tu archivo de sonido
    
    historia_crimen = f"Ha ocurrido un crimen en la {locacion_correcta}!\nEl culpable, utilizó un/a {arma_correcta.lower()} para cometer el crimen."
    texto_historia = tk.Label(ventana_juego, text=historia_crimen, padx=20, pady=20, font=("Arial", 12))
    texto_historia.pack()
    
    texto_pregunta = tk.Label(ventana_juego, text="Haz hasta 4 preguntas sobre cada personaje:", padx=20, pady=10, font=("Arial", 12))
    texto_pregunta.pack()
    
    for personaje in personajes:
        imagen = Image.open(personajes[personaje]["imagen"])
        imagen = imagen.resize((50, 50), Image.ANTIALIAS)
        imagen_tk = ImageTk.PhotoImage(imagen)
        label_imagen = tk.Label(ventana_juego, image=imagen_tk)
        label_imagen.image = imagen_tk
        label_imagen.pack()
        
        boton_culpable = tk.Button(ventana_juego, text=personaje, command=lambda c=personaje: verificar_eleccion(c), padx=20, pady=10)
        boton_culpable.pack(pady=5)
    
    def abrir_preguntas():
        ventana_preguntas = tk.Toplevel()
        ventana_preguntas.title("Preguntas")
        
        ancho_pantalla = ventana_preguntas.winfo_screenwidth()
        alto_pantalla = ventana_preguntas.winfo_screenheight()
        ventana_preguntas.geometry(f"{ancho_pantalla}x{alto_pantalla}")
        
        for personaje in personajes:
            for idx in range(3):
                pregunta_btn = tk.Button(ventana_preguntas, text=preguntas_disponibles[idx].format(personaje), 
                                         command=lambda p=personaje, i=idx: hacer_pregunta(p, i), padx=20, pady=10)
                pregunta_btn.pack(pady=5)
    
    boton_preguntas = tk.Button(ventana_juego, text="Hacer preguntas sobre los personajes", command=abrir_preguntas, padx=20, pady=10)
    boton_preguntas.pack(pady=10)
    
    ventana_juego.mainloop()

def mostrar_opciones_fin():
    ventana_opciones = tk.Tk()
    ventana_opciones.title("Fin del juego")
    ventana_opciones.geometry("300x150")
    
    mensaje_fin = tk.Label(ventana_opciones, text="Quieres jugar de nuevo?", padx=20, pady=20, font=("Arial", 12))
    mensaje_fin.pack()
    
    def jugar_nuevo():
        ventana_opciones.destroy()
        iniciar_juego()
    
    def salir_juego():
        ventana_opciones.destroy()
        if ventana_juego:
            ventana_juego.destroy()
    
    boton_jugar_nuevo = tk.Button(ventana_opciones, text="Si", command=jugar_nuevo, padx=20, pady=10)
    boton_jugar_nuevo.pack(side=tk.LEFT, padx=20)
    
    boton_salir = tk.Button(ventana_opciones, text="No", command=salir_juego, padx=20, pady=10)
    boton_salir.pack(side=tk.RIGHT, padx=20)
    
    ventana_opciones.mainloop()

# Iniciar el juego al ejecutar el script
iniciar_juego()
